import java.util.Collection;

import jaima.game.Move;
import jaima.game.Player;
import jaima.game.State;

public class penteState extends State {

	String string = "";
	boolean Bwhite = false;
	boolean Bblack = false;
	int captureW = 0;
	int captureB = 0;
	int counter = 0;
	pentePlayer player = new pentePlayer();
	
	public penteState(String s)
	{
		string = s;
	}
	
	
	public String toString() {
		return string;
	}

	@Override
	public State clone() {
		penteState newState = new penteState(this.string);
		return newState;
	}

	@Override
	public Collection<Move> actions() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public boolean terminal() {
		if(Bwhite == true)
		{
			return true;
		}
		if(Bblack == true)
		{
			return true;
		}
		if(captureW == 5)
		{
			return true;
		}
		if(captureB == 5)
		{
			return true;
		}
		
		return false;
	}

	public double utility(Player p) {
		// TODO Auto-generated method stub
		return 0;
	}

	public Player toMove() {
		int b = charCount('B');
        int w = charCount('W');
        int toMove = (b <= w)? 0: 1;
        return players[toMove];
	}

	private int charCount(char m)
    {
        int count = 0;
        for(char c: board)
            if(c == m)
                count++;
        return count;
    }
	
	public State result(Move m) {
		 penteMove n = (penteMove) m;
	        int r = n.row();
	        int c = n.col();
	        int i = index(r, c);
	        State s = clone();
	        s.State[i] = toMove().toString().charAt(0);
	        return s;
	}
	
	

}
