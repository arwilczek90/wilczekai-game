#BlueJ class context
comment0.params=lexer
comment0.target=FOLParser(FOLLexer)
comment1.params=domain
comment1.target=FOLParser(jaima.logic.firstorder.FOLDomain)
comment10.params=
comment10.target=ast.Sentence\ parseTermEquality()
comment11.params=
comment11.target=ast.Sentence\ parseNotSentence()
comment12.params=
comment12.target=ast.Sentence\ parseSentence()
comment13.params=
comment13.target=ast.Sentence\ parseQuantifiedSentence()
comment14.params=
comment14.target=ast.Sentence\ parseParanthizedSentence()
comment15.params=t
comment15.target=boolean\ binaryConnector(jaima.logic.common.Token)
comment16.params=t
comment16.target=boolean\ lParen(jaima.logic.common.Token)
comment17.params=t
comment17.target=boolean\ term(jaima.logic.common.Token)
comment18.params=t
comment18.target=boolean\ predicate(jaima.logic.common.Token)
comment19.params=t
comment19.target=boolean\ notToken(jaima.logic.common.Token)
comment2.params=s
comment2.target=ast.Sentence\ parse(java.lang.String)
comment20.params=i
comment20.target=jaima.logic.common.Token\ lookAhead(int)
comment21.params=
comment21.target=void\ consume()
comment22.params=
comment22.target=void\ loadNextTokenFromInput()
comment23.params=t
comment23.target=boolean\ isEndOfInput(jaima.logic.common.Token)
comment24.params=
comment24.target=void\ fillLookAheadBuffer()
comment25.params=terminalSymbol
comment25.target=void\ match(java.lang.String)
comment3.params=s
comment3.target=void\ setUpToParse(java.lang.String)
comment4.params=
comment4.target=ast.Term\ parseTerm()
comment5.params=
comment5.target=ast.Term\ parseVariable()
comment6.params=
comment6.target=ast.Term\ parseConstant()
comment7.params=
comment7.target=ast.Term\ parseFunction()
comment8.params=
comment8.target=ast.Sentence\ parsePredicate()
comment9.params=
comment9.target=java.util.List\ processTerms()
numComments=26
